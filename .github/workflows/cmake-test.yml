name: cmake-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: ubuntu-22.04-clang-15-cmake, os: ubuntu-22.04, cxx: clang++-15 } #installed
          - { name: ubuntu-22.04-gcc-12-cmake, os: ubuntu-22.04, cxx: g++-12 } #installed
          - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed
    runs-on: ubuntu-22.04
    name: ${{ matrix.config.name }}

    steps:
      - name: Install compilers
        run: |
             sudo apt-get update
             sudo apt-get install ${{ matrix.config.cxx }} -y

      - name: Install dependencies
        run: |
           sudo apt-get install autoconf libleptonica-dev -y
           sudo apt-get install libarchive-dev libcurl4-openssl-dev -y
           sudo apt-get install libpango1.0-dev -y
           sudo apt-get install cabextract -y
           sudo apt-get install ninja-build -y
           cmake --version

      - name: Checkout Source
        uses: actions/checkout@v4
        with:
             repository: tesseract-ocr/tesseract
             submodules: recursive

      - name: Configure Tesseract
        run: |
             mkdir build
             mkdir inst
             cmake \
               -S . \
               -B build \
               -G Ninja \
               -DCMAKE_BUILD_TYPE=Release \
               -DOPENMP_BUILD=OFF \
               -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} \
               -DCMAKE_INSTALL_PREFIX:PATH=inst

      - name: Build Tesseract
        run: |
             cmake --build build --config Release --target install

      - name: Display Tesseract Version
        run: |
             build/inst/bin/tesseract -v

      - name: Display Training Tools Version
        run: |
             build/inst/bin/lstmtraining -v
             build/inst/bin/text2image -v

      - name: Download fonts, tessdata and langdata required for tests
        run: |
             git clone https://github.com/egorpugin/tessdata tessdata_unittest
             cp tessdata_unittest/fonts/* test/testing/
             mv tessdata_unittest/* ../

      - name: List languages in different tessdata-dir
        run: |
             build/inst/bin/tesseract  --list-langs --tessdata-dir ../tessdata
             build/inst/bin/tesseract  --list-langs --tessdata-dir ../tessdata_best
             build/inst/bin/tesseract  --list-langs --tessdata-dir ../tessdata_fast

      - name: Run Tesseract on test images in different languages
        run: |
             build/inst/bin/tesseract test/testing/phototest.tif - --oem 1  --tessdata-dir ../tessdata
             build/inst/bin/tesseract test/testing/raaj.tif - -l hin --oem 1   --tessdata-dir ../tessdata
             build/inst/bin/tesseract test/testing/viet.tif - -l vie --oem 1   --tessdata-dir ../tessdata
             build/inst/bin/tesseract test/testing/hebrew.png - -l heb --oem 1   --tessdata-dir ../tessdata
             build/inst/bin/tesseract test/testing/eurotext.tif - -l fra --oem 1 --tessdata-dir ../tessdata_best
             build/inst/bin/tesseract test/testing/arabic.tif - -l ara --oem 1 --psm 6  --tessdata-dir ../tessdata

      - name: Build and run basicapitest
        run: |
             export "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/build/inst/lib/pkgconfig/:$PKG_CONFIG_PATH"
             cd test
             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp "-I$GITHUB_WORKSPACE/build/inst/include" "-L$GITHUB_WORKSPACE/build/inst/lib" $(pkg-config --cflags --libs tesseract lept libarchive libcurl) -pthread -std=c++11
             ./basicapitest

      - name: Display Compiler Version
        run: |
             ${{ matrix.config.cxx }} --version
             pwd
             ls -la
             # git log -3 --pretty=format:'%h %ad %s | %an'
        if: always()

      - name: Upload Tesseract artifact
        uses: actions/upload-artifact@v4
        with:
          name: tesseract-build-cmake-${{ matrix.config.name }}
          path: build
